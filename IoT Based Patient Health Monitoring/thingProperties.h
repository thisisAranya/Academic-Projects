// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "8453b15b-8dc0-4fc9-a318-dc559a95bbf8";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

float cloud_body_temperature;
float cloud_bpm;
float cloud_humidity;
float cloud_pressure;
float cloud_spo2;
float cloud_temperature;
bool cloud_alarm;
bool cloud_flame;
bool cloud_gas;
bool cloud_finger;
bool send_email;
bool detected;
int start_time;
bool lcd_blink;
float cloud_body_temperature1;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(cloud_body_temperature, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_bpm, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_humidity, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_pressure, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_spo2, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_temperature, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_alarm, READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_flame, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_gas, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_finger, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(send_email, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(detected, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(start_time, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(lcd_blink, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cloud_body_temperature1, READ, ON_CHANGE, NULL);


}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
